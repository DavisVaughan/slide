% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/block.R
\name{block}
\alias{block}
\title{Break a vector into blocks}
\usage{
block(x, i, period = "year", every = 1L, origin = NULL)
}
\arguments{
\item{x}{\verb{[vector]}

The vector to block.}

\item{i}{\verb{[Date / POSIXct / POSIXlt]}

The datetime index to block by. There are 3 restrictions on \code{i}:
\itemize{
\item The size of \code{i} must match the size of \code{x}, \code{i} will not be recycled.
\item \code{i} must be an \emph{increasing} vector, but duplicate values
are allowed.
\item \code{i} is not allowed to have missing values.
}}

\item{period}{\verb{[character(1)]}

A string defining the period to group by. Valid inputs can be roughly
broken into:
\itemize{
\item \code{"year"}, \code{"quarter"}, \code{"month"}, \code{"week"}, \code{"day"}
\item \code{"hour"}, \code{"minute"}, \code{"second"}, \code{"millisecond"}
\item \code{"yweek"}, \code{"mweek"}
\item \code{"yday"}, \code{"mday"}
}}

\item{every}{\verb{[positive integer(1)]}

The number of \code{period}s to group together.

For example, if \code{period = "year"} and \code{every} is set to \code{2}, then the years
1970 and 1971 would be placed in the same group.}

\item{origin}{\verb{[Date(1) / POSIXct(1) / POSIXlt(1) / NULL]}

The reference date time value. The default when left as \code{NULL} is the
epoch time of \verb{1970-01-01 00:00:00}, \emph{in the time zone of \code{x}}.

This is generally used to define the anchor time to count from, which is
relevant when \code{every > 1}.}
}
\value{
A list containing elements of type \code{vctrs::vec_ptype(x)}. The size of the
output is identical to the number of unique period groups as determined
by \code{\link[warp:warp_boundary]{warp::warp_boundary()}}.
}
\description{
\code{block()} splits \code{x} into blocks defined by \code{i}, a date time index. For
example, it can split \code{x} into monthly or yearly blocks. Combined with
\code{purrr::map()} or \code{lapply()}, it is one way to iterate over a vector in
"time blocks".
}
\details{
\code{block()} determines the indices to block by with \code{\link[warp:warp_boundary]{warp::warp_boundary()}},
and splits \code{x} by those indices using \code{\link[vctrs:vec_chop]{vctrs::vec_chop()}}.

Like \code{\link[=slide]{slide()}}, \code{block()} splits data frame \code{x} values row wise.
}
\examples{
x <- 1:6
i <- as.Date("2019-01-01") + c(-2:2, 31)

block(i, i, period = "year")

# Data frames are split row wise
df <- data.frame(x = x, i = i)
block(df, i, period = "month")

# Iterate over these blocks to apply a function over
# non-overlapping period blocks. For example, to compute a
# mean over yearly or monthly blocks.
vapply(block(x, i, "year"), mean, numeric(1))
vapply(block(x, i, "month"), mean, numeric(1))

# block by every 2 months, ensuring that we start counting
# the 1st of the 2 months from `2019-01-01`
block(i, i, period = "month", every = 2, origin = as.Date("2019-01-01"))

# Use the `origin` to instead start counting from `2018-12-01`, meaning
# that [2018-12, 2019-01] gets bucketed together.
block(i, i, period = "month", every = 2, origin = as.Date("2018-12-01"))
}
